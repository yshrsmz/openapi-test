/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.codingfeline.openapi.kmp.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.codingfeline.openapi.kmp.apis.FakeApi
import com.codingfeline.openapi.kmp.models.CodesEnum
import com.codingfeline.openapi.kmp.models.RefRefToPathLevelParameterOneofRefToOneofParameter
import com.codingfeline.openapi.kmp.models.RefToRefParameterAnyofRefToAnyofParameter

class FakeApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FakeApi
        //val apiInstance = FakeApi()

        // to test fakeInlineSchemaAnyofPath1Get
        should("test fakeInlineSchemaAnyofPath1Get") {
            // uncomment below to test fakeInlineSchemaAnyofPath1Get
            //val result : kotlin.String = apiInstance.fakeInlineSchemaAnyofPath1Get()
            //result shouldBe ("TODO")
        }

        // to test fakeInlineSchemaAnyofPath2Get
        should("test fakeInlineSchemaAnyofPath2Get") {
            // uncomment below to test fakeInlineSchemaAnyofPath2Get
            //val result : kotlin.String = apiInstance.fakeInlineSchemaAnyofPath2Get()
            //result shouldBe ("TODO")
        }

        // to test fakeInlineSchemaAnyofPath3Get
        should("test fakeInlineSchemaAnyofPath3Get") {
            // uncomment below to test fakeInlineSchemaAnyofPath3Get
            //val result : kotlin.collections.List<kotlin.String> = apiInstance.fakeInlineSchemaAnyofPath3Get()
            //result shouldBe ("TODO")
        }

        // to test op1
        should("test op1") {
            // uncomment below to test op1
            //val result : kotlin.Any = apiInstance.op1()
            //result shouldBe ("TODO")
        }

        // to test op2
        should("test op2") {
            // uncomment below to test op2
            //val result : kotlin.Any = apiInstance.op2()
            //result shouldBe ("TODO")
        }

        // to test op3
        should("test op3") {
            // uncomment below to test op3
            //val queryEnum : kotlin.collections.List<CodesEnum> =  // kotlin.collections.List<CodesEnum> | query enum test
            //apiInstance.op3(queryEnum)
        }

        // to test refToRefParameter
        should("test refToRefParameter") {
            // uncomment below to test refToRefParameter
            //val refToUuid : kotlin.String = 61864654-6e6b-4152-a62f-795fdd606bc2 // kotlin.String | to test ref to parameter (uuid)
            //val result : kotlin.String = apiInstance.refToRefParameter(refToUuid)
            //result shouldBe ("TODO")
        }

        // to test refToRefParameterAnyof
        should("test refToRefParameterAnyof") {
            // uncomment below to test refToRefParameterAnyof
            //val refToAnyof : RefToRefParameterAnyofRefToAnyofParameter =  // RefToRefParameterAnyofRefToAnyofParameter | to test ref to parameter (anyof)
            //apiInstance.refToRefParameterAnyof(refToAnyof)
        }

        // to test refToRefParameterOneof
        should("test refToRefParameterOneof") {
            // uncomment below to test refToRefParameterOneof
            //val refToOneof : RefRefToPathLevelParameterOneofRefToOneofParameter =  // RefRefToPathLevelParameterOneofRefToOneofParameter | to test ref to parameter (oneof)
            //apiInstance.refToRefParameterOneof(refToOneof)
        }

        // to test responseNoRef
        should("test responseNoRef") {
            // uncomment below to test responseNoRef
            //val result : kotlin.String = apiInstance.responseNoRef()
            //result shouldBe ("TODO")
        }

        // to test responseRefToNoRef
        should("test responseRefToNoRef") {
            // uncomment below to test responseRefToNoRef
            //val result : kotlin.String = apiInstance.responseRefToNoRef()
            //result shouldBe ("TODO")
        }

        // to test responseRefToRef
        should("test responseRefToRef") {
            // uncomment below to test responseRefToRef
            //val result : kotlin.String = apiInstance.responseRefToRef()
            //result shouldBe ("TODO")
        }

    }
}
